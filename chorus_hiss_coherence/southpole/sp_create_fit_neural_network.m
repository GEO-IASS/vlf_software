function [net, tr] = sp_create_fit_neural_network(inputs, targets, em_type)
% Generate a neural network to determine the extents of an emission, once
% it's known that an emission exists

% By Daniel Golden (dgolden1 at stanford dot edu) May 2011
% $Id$

% Autogenerated by nftool

% Create a Fitting Network
switch em_type
  case 'chorus'
    hiddenLayerSize = 10;
  case 'hiss'
    hiddenLayerSize = 12;
end
net = fitnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs);

% View the Network
% view(net)

% Plots
switch em_type
  case 'chorus'
    targets = targets(2, :);
    outputs = outputs(2, :);
  case 'hiss'
    targets = targets(1, :);
    outputs = outputs(1, :);
end

plotregression(targets(tr.trainInd), outputs(tr.trainInd), 'Main', ...
  targets(tr.valInd), outputs(tr.valInd), 'Validation', ...
  targets(tr.testInd), outputs(tr.testInd), 'Test', ...
  targets, outputs, 'Total');

% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotfit(net,inputs,targets)
%figure, plotregression(targets,outputs)
%figure, ploterrhist(errors)
